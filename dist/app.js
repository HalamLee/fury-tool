#!/usr/bin/env node
"use strict";var S=Object.create;var I=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var T=(r,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of C(t))!M.call(r,o)&&o!==e&&I(r,o,{get:()=>t[o],enumerable:!(s=L(t,o))||s.enumerable});return r};var w=(r,t,e)=>(e=r!=null?S(D(r)):{},T(t||!r||!r.__esModule?I(e,"default",{value:r,enumerable:!0}):e,r));var k=require("commander");var p=class{constructor({prompt:t,logger:e}){this.prompt=t,this.logger=e,this.sWorkDir=process.cwd()}async invoke(){try{await this.prepare(),await this.execute(),await this.finalize()}catch(t){let e=t;this.logger.errorD(e),await this.rollback()}}setWorkDir(t){this.sWorkDir=t}};var F=w(require("moment")),n=class r{constructor(){}static getInstance(){return r.instance?this.instance.debug("Get Logger Instance"):(r.instance=new r,this.instance.debug("New Logger Instance")),r.instance}formatMessage(t,e,s){let o="\x1B[0m",P=(0,F.default)().format("YYYY.MM.DD HH:mm:ss"),U=process.pid;return`${P} | ${t}${e}${o} | ${s}`}debug(t){typeof t=="object"&&(t=JSON.stringify(t,null,2)),console.log(this.formatMessage("\x1B[36m","DEBUG",t))}info(t){console.info(this.formatMessage("\x1B[32m","INFO",t))}warn(t){console.warn(this.formatMessage("\x1B[33m","WARN",t))}error(t){console.error(this.formatMessage("\x1B[31m","ERROR",t))}errorD(t){console.error(this.formatMessage("\x1B[31m","ERROR DEBUG",`{
  type: '${t.title}'
  reason: '${t.message}'
}`))}space(){console.log()}};var i=class{constructor(t){this.logger=n.getInstance(),this.projectInfo=t}};var a=class extends i{constructor(t){super(t)}async build(){this.logger.info("Build Start (Default)")}getFactory(){var t;switch((t=this.projectInfo)==null?void 0:t.frameworkType){case"react":return new m(this.projectInfo);case"vue":return new g(this.projectInfo);case"express":return new l(this.projectInfo);default:return this}}};var m=class extends i{async build(){}};var g=class extends i{async build(){}};var l=class extends i{async build(){}};var c=class{constructor(t,e){this.logger=n.getInstance(),this.title=`${t}Exception`,this.message=e}};var N="OperationFail",f=class extends c{constructor(t){super(N,t),this.logger.error(`${t} \uD504\uB85C\uC138\uC2A4\uB97C \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.`)}};var u=class{constructor(){}static validateRequireFields(t,e){e.forEach(s=>{if(!t[s])throw new f(s);return!0})}};var h=[{type:"text",name:"projectName",message:"Enter the project name:",initial:"demo"},{type:"confirm",name:"useTypescript",message:"Use TypeScript?",initial:!0},{type:"confirm",name:"useFramework",message:"Use Framework?",initial:!0},{type:"confirm",name:"usePrettier",message:"Use Prettier?",initial:!0},{type:"confirm",name:"useEslint",message:"Use ESLint?",initial:!0}],y=[{type:"select",name:"frameworkType",message:"Select a framework:",choices:[{title:"\x1B[34mReact\x1B[0m",value:"react"},{title:"\x1B[32mVue\x1B[0m",value:"vue"}]}];var d=class extends p{constructor(){super(...arguments);this.projectInfo={}}async prepare(){this.logger.space();let e=await this.prompt.call(h);Object.assign(this.projectInfo,e);let s=h.map(o=>String(o.name));if(u.validateRequireFields(this.projectInfo,s),this.projectInfo.useFramework){let o=await this.prompt.call(y);u.validateRequireFields(o,y.map(P=>String(P.name))),Object.assign(this.projectInfo,o)}}async execute(){await new a(this.projectInfo).getFactory().build()}async finalize(){}async rollback(){}};var x=w(require("prompts"));var b=class{constructor(){this.prompt=x.default}async call(t){return await this.prompt(t)}};var E="fury",O="0.0.1",R="CLI tool for JavaScript developers";var v=class{constructor(){this.program=new k.Command,this.prompt=new b,this.logger=n.getInstance(),this.configureCommands()}async configureCommands(){this.program.name(E).option("no option","Start create project").option("-g, --git","Start git management",!1).version(O).description(R).action(async t=>{let e=this.getCommand(t);e&&await e.invoke()})}getCommand(t){let e={prompt:this.prompt,logger:this.logger};switch(!0){case t.git:return;default:return new d(e)}}run(){this.logger.debug("Program Start"),this.program.parse(process.argv)}};new v().run();
