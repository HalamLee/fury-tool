#!/usr/bin/env node
"use strict";var Q=Object.create;var H=Object.defineProperty;var X=Object.getOwnPropertyDescriptor;var tt=Object.getOwnPropertyNames;var et=Object.getPrototypeOf,rt=Object.prototype.hasOwnProperty;var it=(r,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of tt(t))!rt.call(r,i)&&i!==e&&H(r,i,{get:()=>t[i],enumerable:!(s=X(t,i))||s.enumerable});return r};var y=(r,t,e)=>(e=r!=null?Q(et(r)):{},it(t||!r||!r.__esModule?H(e,"default",{value:r,enumerable:!0}):e,r));var q=require("commander");var u=class{Prompt;Logger;Spinner;Launcher;CommonUtil;FileUtil;constructor({prompt:t,logger:e,spinner:s,launcher:i,utils:o}){this.Prompt=t,this.Logger=e,this.Spinner=s,this.Launcher=i,this.CommonUtil=o.CommonUtil,this.FileUtil=o.FileUtil}async invoke(){try{await this.prepare(),await this.execute(),await this.finalize()}catch(t){let e=t;this.Logger.errorD(e),await this.rollback()}}};var Y=y(require("moment")),m=class r{static instance;logLevel;constructor(t){let e={error:0,info:1,warn:2,debug:3,trace:4};this.logLevel=t?e[t]:2}static getInstance(t){return r.instance?this.instance.debug("Get Logger Instance"):(r.instance=new r(t),this.instance.debug("New Logger Instance"),this.instance.debug(`Level: ${t}`)),r.instance}formatMessage(t,e,s){return`${(0,Y.default)().format("YYYY.MM.DD HH:mm:ss")} | ${t}${e}\x1B[0m | ${s}`}debug(t){this.logLevel>=3&&(typeof t=="object"&&(t=JSON.stringify(t,null,2)),console.log(this.formatMessage("\x1B[36m","DEBUG",t)))}info(t){this.logLevel>=1&&console.info(this.formatMessage("\x1B[32m","INFO",t))}warn(t){this.logLevel>=2&&console.warn(this.formatMessage("\x1B[33m","WARN",t))}error(t){this.logLevel>=0&&console.error(this.formatMessage("\x1B[31m","ERROR",t))}errorD(t){this.logLevel>=4&&console.error(this.formatMessage("\x1B[31m","ERROR_D",`{
  type: '${t.title}'
  reason: '${t.context}'
}`))}system(t){this.logLevel>=0&&console.log(t)}space(){console.log()}logo(){console.log(`
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28E0\u28E4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28FE\u28FF\u28FF\u280F\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28A0\u28FF\u28FF\u28FF\u284F\u2840\u28C0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u287F\u2803\u2800\u28C0\u28C0\u2840\u2800\u2800\u2800\u2800\u2800\u2880\u28C0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28F8\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u28F6\u28FE\u28FF\u28FF\u28D7\u2800\u2800\u2880\u28E0\u28F6\u28FF\u28FF\u2847\u2800\u2800\u2880\u28FE\u28FE\u28FE\u28FE\u28FE\u28FE\u2802\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u285E\u2801\u28FD\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u28F7\u28F6\u28FE\u28FF\u28FF\u28FF\u283F\u280F\u2801\u2800\u2800\u28B8\u28FF\u28FF\u2809\u2809\u2809\u2809\u28A0\u28E4\u28E4\u2800\u2800\u28E4\u28E4\u2844\u2800\u28E0\u28E4\u28C4\u28E0\u28E4\u28A0\u28E4\u28E4\u2800\u2800\u28E4\u28E4\u2844\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2880\u28FE\u2805\u2828\u28FF\u28FF\u28BF\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u284F\u2808\u2818\u28FB\u28FF\u2809\u2808\u2800\u2800\u2800\u2800\u2800\u2800\u28FD\u28FF\u28FF\u28FE\u28FE\u284E\u2800\u28FC\u28FF\u28DF\u2800\u2890\u28FF\u28FF\u2803\u2880\u28FF\u28FF\u283F\u281B\u2813\u2898\u28FF\u28FF\u2800\u28B0\u28FF\u285F\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2818\u28FF\u28E7\u28C0\u2819\u2821\u28FF\u28FF\u28FF\u284F\u28FF\u28FF\u287F\u2801\u2800\u2880\u28FD\u28FF\u28E7\u28C0\u2800\u2800\u2800\u2800\u2800\u28B0\u28FF\u28FF\u2801\u2801\u2801\u2801\u2880\u28FF\u28FF\u2847\u2800\u28FC\u28FF\u28DF\u2800\u28B0\u28FF\u28FF\u2801\u2800\u2800\u2800\u28FF\u28FF\u28E0\u28FF\u285F\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28BF\u28FF\u28FF\u28FF\u28FF\u28FF\u28FF\u28E7\u28CD\u28C9\u28C1\u28C0\u28E4\u28FE\u28FF\u287F\u283F\u280B\u2800\u2800\u2800\u2800\u2800\u28FE\u28FF\u286F\u2800\u2800\u2800\u2800\u2818\u28FF\u28FF\u287F\u287F\u28BB\u28FF\u28DF\u2800\u28FD\u28FF\u284F\u2800\u2800\u2800\u2800\u28FB\u28FF\u28FF\u280F\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u281B\u281B\u281F\u283F\u283F\u283B\u281F\u283F\u283B\u283B\u281B\u280B\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28C0\u28F4\u28FE\u287F\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u281B\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800
`)}};var d=require("fs"),C=require("path");var n=class{logger;title;message;context;constructor(t,e,s){this.logger=m.getInstance(),this.title=`${t}Exception`,this.message=e,this.context=s}};var st="NoData",c=class extends n{constructor(t){super(st,t,new Error(`${t} is undefined`)),this.logger.error(`${this.convertMessage(t)} is not exist.`)}convertMessage(t){return{projectName:"[Project Name] value",packageManager:"[Package Manager] value",useTypescript:"[Use Typescript] value",useFramework:"[Use Framework] value",useGit:"[Use Git] value",usePrettier:"[Use Prettier] value",useEslint:"[Use Eslint] value",frameworkType:"[Framework Type] value",remoteUrl:"[Remote URL] value"}[t]}};var ot="OperationFail",b=class extends n{constructor(t,e){super(ot,t,e),this.logger.error(`${this.convertMessage(t)} Failed.`)}convertMessage(t){return{projectBuild:"Project Build",createDirectory:"Create Project Directory"}[t]}};var nt="Git",l=class extends n{constructor(t){super(nt,t,t),this.logger.error(`${this.convertMessage(t)}.`)}convertMessage(t){return{init:"Not a git repository (.git)",notInstall:"Git is not installed",remoteNotExist:"This branch is not exist"}[t]}};var at="AlreadyExist",v=class extends n{constructor(t){super(at,"",t),this.logger.error(`${t} is already exist.`)}};var h=class r{constructor(){}static makePath(t,e){return(0,C.join)(t,e)}static async checkExist(t){return(0,d.existsSync)(t)}static async createDirectory(t,e,s){try{let i=(0,C.join)(t,e);return(0,d.mkdirSync)(i,{recursive:s!=null&&s.recursive?s.recursive:!1}),await this.checkExist(i),i}catch(i){throw new b("createDirectory",i)}}static async createFile(t,e,s){let i=(0,C.join)(t,e);return(0,d.writeFileSync)(i,s),this.checkExist(i)}static async createStructure(t,e){for(let s in t){let i=t[s];typeof i=="string"&&await this.createFile(e,`${s}.${i}`,""),typeof i=="object"&&(await this.createDirectory(e,s),await r.createStructure(i,this.makePath(e,s)))}}};var g=class{constructor(){}static validateRequireFields(t,e){e.forEach(s=>{if(t[s]===void 0)throw new c(s);return!0})}};var a=class{logger;FileUtil;projectInfo;sWorkDir;constructor(t){this.logger=m.getInstance(),this.FileUtil=h,this.projectInfo=t,this.sWorkDir=process.cwd()}setWorkDir(t){this.sWorkDir=t}};var T={name:"moduleName",version:"1.0.0",description:"JavaScript Project setup from fury",main:"src/index.js",scripts:{dev:"node src/index.js"},keywords:[],author:"",license:"ISC",dependencies:{}};var N={name:"moduleName",version:"1.0.0",description:"TypeScript Project setup from fury",main:"dist/index.js",scripts:{build:"npx tsc",dev:"ts-node src/index.ts"},keywords:[],author:"",license:"ISC",devDependencies:{"@types/node":"^20.12.7","ts-node":"^10.9.2",typescript:"^5.4.5"}};var U={compilerOptions:{target:"ES2020",module:"commonjs",outDir:"./dist",rootDir:"./src",esModuleInterop:!0,declaration:!0}};var F={default:{src:{index:"js",utils:{projectUtil:"js"}}},typescript:{src:{index:"ts",utils:{projectUtil:"ts"}}}};var O=`
# {{projectName}}

> Write your project description here

- point1
- point2
- point3

## Installation

\`\`\`bash
# npm
npm install {{projectName}}

# yarn
yarn add {{projectName}}

# pnpm
pnpm install {{projectName}}
\`\`\`

## Usage

\`\`\`bash
# Write your project usage here
\`\`\`

## Document

- Write your document link and preview here

## Authors

- Write your name - Write your role (ex. Project initial and development)

## Version History

- 0.0.1
  - Write your version history here

## License

Write your license info here (ex. This project is licensed under the [MIT] License)
`;var x=class extends a{constructor(t){super(t)}async setup(){let t=await this.FileUtil.createDirectory(this.sWorkDir,this.projectInfo.projectName),e=this.projectInfo.useTypescript?N:T,s=this.projectInfo.useTypescript?F.typescript:F.default;e.name=this.projectInfo.projectName,await this.FileUtil.createFile(t,"package.json",JSON.stringify(e,null,2)),this.projectInfo.useTypescript&&await this.FileUtil.createFile(t,"tsconfig.json",JSON.stringify(U,null,2)),await this.FileUtil.createStructure(s,t),this.setWorkDir(t)}getWorkDir(){return this.sWorkDir}getFactory(){var t;switch((t=this.projectInfo)==null?void 0:t.frameworkType){case"react":return new w(this.projectInfo);case"vue":return new I(this.projectInfo);case"express":return new j(this.projectInfo);default:return this}}};var w=class extends a{async setup(){}getWorkDir(){return""}};var I=class extends a{async setup(){}getWorkDir(){return""}};var j=class extends a{async setup(){}getWorkDir(){return""}};var M=[{type:"text",name:"projectName",message:"Enter the project name:",initial:"demo"},{type:"select",name:"packageManager",message:"Select a package manager:",choices:[{title:"\x1B[31mnpm\x1B[0m",value:"npm"},{title:"\x1B[36myarn\x1B[0m",value:"yarn"},{title:"\x1B[33mpnpm\x1B[0m",value:"pnpm"}]},{type:"toggle",name:"useTypescript",message:"Use TypeScript?",initial:!1},{type:"toggle",name:"useFramework",message:"Use Framework?",initial:!1},{type:"toggle",name:"useGit",message:"Use Git?",initial:!1},{type:"toggle",name:"usePrettier",message:"Use Prettier?",initial:!1},{type:"toggle",name:"useEslint",message:"Use ESLint?",initial:!1}],W=[{type:"select",name:"frameworkType",message:"Select a framework:",choices:[{title:"\x1B[34mReact\x1B[0m",value:"react"},{title:"\x1B[32mVue\x1B[0m",value:"vue"}]}],B=[{type:"text",name:"remoteUrl",message:"Enter the remote repo URL:",validate:r=>{let t=new RegExp(/https:\/\/github\.com\/[a-zA-Z0-9]+\/[a-zA-Z0-9]/);return r===""?!1:!!t.test(r)}}];var G=[{type:"select",name:"subCommand",message:"Select the action you want: ",choices:[{title:"Init",value:"init"},{title:"Commit & Push",value:"push"},{title:"Pull",value:"pull"},{title:"Merge",value:"merge"},{title:"Branch Manage",value:"branch"}]}],A=[{type:"text",name:"remoteUrl",message:"Enter the remote repo URL:",validate:r=>{let t=new RegExp(/https:\/\/github\.com\/[a-zA-Z0-9]+\/[a-zA-Z0-9]/);return r===""?!1:!!t.test(r)}},{type:"confirm",name:"useFirstCommit",message:"Do you want to initial commit?",initial:!0}],_=[{type:"select",name:"commitType",message:"Select a type of commit: ",choices:[{title:"\u{1F6A7} - Work in Progress",value:":construction:"},{title:"\u2728 - New Feature",value:":sparkles:"},{title:"\u{1F41B} - Bug Fix",value:":bug:"},{title:"\u{1F528} - Refactor Code",value:":hammer:"},{title:"\u26A1\uFE0F - Performance",value:":zap:"},{title:"\u{1F484} - Style",value:":lipstick:"},{title:"\u2795 - New Dependency",value:":heavy_plus_sign:"},{title:"\u{1F4DD} - Documentation",value:":memo:"},{title:"\u2705 - Tests",value:":white_check_mark:"},{title:"\u{1F3D7}\uFE0F  - Build",value:":building_construction:"},{title:"\u{1F680} - Deploying",value:":rocket:"},{title:"\u{1F477} - CI/CD",value:":construction_worker:"},{title:"\u{1F40C} - Chore",value:"\u{1F40C}"}]},{type:"text",name:"commitMessage",message:"Enter commit message: ",validate:r=>r!==""},{type:"toggle",name:"pushPermission",active:"yes",inactive:"no",initial:!0,message:"Do you want to push to remote repo?: "}],S=[{type:"select",name:"targetBranch",message:"Select the target branch: ",choices:[]}],$=[{type:"confirm",name:"mergeComplete",message:"Merge Done?: ",initial:!1}],J=[{type:"select",name:"branchCommand",message:"Select the branch action you want: ",choices:[{title:"Change Branch",value:"change"},{title:"Create Branch",value:"create"},{title:"Rename Branch",value:"rename"},{title:"Delete Branch",value:"delete"}]}];var P=class extends u{projectInfo={};sWorkDir="";async prepare(){let t=await this.Prompt.call(M);if(Object.assign(this.projectInfo,t),this.projectInfo.useFramework){let e=await this.Prompt.call(W);Object.assign(this.projectInfo,e)}if(this.projectInfo.useGit){let e=await this.Prompt.call(B);Object.assign(this.projectInfo,e)}this.Logger.space()}async execute(){let t=this.Spinner.start("Creating project..."),e=new x(this.projectInfo).getFactory();await e.setup(),this.sWorkDir=e.getWorkDir(),this.Spinner.success(t,`\u2728 Creating project \x1B[35min\x1B[0m ${this.sWorkDir}`),this.Logger.space()}async finalize(){let t=this.Spinner.start("\u{1F4DD}  Write README.md...");try{await this.FileUtil.createFile(this.sWorkDir,"README.md",O.replace(/{{projectName}}/g,this.projectInfo.projectName)),this.Spinner.success(t,"\u{1F4DD}  Write README.md")}catch(i){t.fail(),this.Logger.error(i.message)}if(this.projectInfo.useGit){let i=this.Spinner.start("\u{1F334}  Setup Git...");await this.FileUtil.createFile(this.sWorkDir,".gitignore","node_modules");try{await this.Launcher.run("git",["init"],this.sWorkDir),await this.Launcher.run("git",["remote","add","origin",this.projectInfo.remoteUrl],this.sWorkDir),this.Spinner.success(i,"\u{1F334}  Setup Git")}catch(o){i.fail(),this.Logger.error(o.message)}}if(this.projectInfo.usePrettier){let i=this.Spinner.start("\u{1F3A8}  Setup Prettier...");await this.FileUtil.createFile(this.sWorkDir,".prettierrc.yaml",""),this.Spinner.success(i,"\u{1F3A8}  Setup Prettier")}let e=this.Spinner.start("\u{1F4E6}  Installing dependencies..."),s=await this.Launcher.run(this.projectInfo.packageManager,["install"],this.sWorkDir);this.Spinner.success(e,`\u{1F4E6}  Install dependencies
`),this.Logger.system(s),this.Logger.space(),this.Logger.system(`\u{1F389}  Successfully created project \x1B[33m${this.projectInfo.projectName}\x1B[0m.`),this.Logger.system(`\u{1F449}  Get started with the following commands:
    $ \x1B[33mcd\x1B[0m ${this.projectInfo.projectName}
    $ code .`)}async rollback(){}};var k=class extends u{gitInfo={};sWorkDir=process.cwd();async prepare(){let t=await this.Prompt.call(G);Object.assign(this.gitInfo,t),this.gitInfo.subCommand!=="init"&&await this.checkValidation()}async execute(){switch(this.gitInfo.subCommand){case"init":{await this.initGit();break}case"push":{await this.pushGit();break}case"pull":{await this.pullGit();break}case"merge":{await this.mergeGit();break}case"branch":{await this.branchManage();break}}}async finalize(){}async rollback(){}async checkValidation(){try{await this.Launcher.run("git",["-v"])}catch{throw new l("notInstall")}let t=this.FileUtil.makePath(this.sWorkDir,".git");if(!await this.FileUtil.checkExist(t))throw new l("init")}async initGit(){try{await this.Launcher.run("git",["-v"])}catch{throw new l("notInstall")}let t=this.FileUtil.makePath(this.sWorkDir,".git");if(await this.FileUtil.checkExist(t))throw new v(".git");await this.Launcher.run("git",["init"],this.sWorkDir);let e=await this.Prompt.call(A);Object.assign(this.gitInfo,e),this.Launcher.run("git",["remote","add","origin",this.gitInfo.remoteUrl],this.sWorkDir),this.gitInfo.useFirstCommit&&(await this.Launcher.run("git",["add","."],this.sWorkDir),await this.Launcher.run("git",["commit","-m",":sparkles: Project Initial"],this.sWorkDir),await this.Launcher.run("git",["push","-u","origin","master"],this.sWorkDir))}async pushGit(){let t=await this.Prompt.call(_);Object.assign(this.gitInfo,t),this.Logger.space();let e=this.Spinner.start("\u{1F4E4} Push Commit to Remote Repo...");await this.Launcher.run("git",["add","."],this.sWorkDir),await this.Launcher.run("git",["commit","-m",`${this.gitInfo.commitType} ${this.gitInfo.commitMessage}`,this.sWorkDir]),this.gitInfo.pushPermission&&await this.Launcher.run("git",["push","-u","origin"],this.sWorkDir),this.Spinner.success(e,"\u{1F4E4} Push Commit to Remote Repo")}async pullGit(){let t=await this.getBranchList("current");if(!(await this.getBranchList("all")).split(`
`).some(o=>{if(o.split("/").length>1){let p=o.split("/");if(p[p.length-1]===t)return!0}}))throw new l("remoteNotExist");let i=this.Spinner.start("\u{1F4E9}  Pulling changes...");await this.Launcher.run("git",["pull","origin",t],this.sWorkDir),this.Spinner.success(i,"\u{1F4E9}  Pull changes")}async mergeGit(){let t=await this.getBranchList("current"),e=await this.getBranchList("all");S[0].choices=e.split(`
`).filter(p=>!p.includes("->")&&!p.includes(t)).map(p=>{let f=p.replace("*","").trim();return{title:f,value:f}});let s=await this.Prompt.call(S);Object.assign(this.gitInfo,s);let i=this.gitInfo.targetBranch.split("/").pop();this.Logger.space();let o=this.Spinner.start(`\u2728 Merging \x1B[32m${t}\x1B[0m \u2190 \x1B[35m${i}\x1B[0m`);this.gitInfo.targetBranch.includes("remotes")&&await this.Launcher.run("git",["pull","origin",`${i}`],this.sWorkDir);try{await this.Launcher.run("git",["merge",`${i}`],this.sWorkDir),this.Spinner.success(o,`\u2728 \x1B[32m${t}\x1B[0m \u2190 \x1B[35m${i}\x1B[0m have been merged`)}catch(p){o.fail(),this.Logger.error(p.message),this.Logger.space();let f=await this.Prompt.call($);f!=null&&f.mergeComplete&&(o.start("\u{1F480} Resolving merge conflicts..."),await this.Launcher.run("git",["merge","--continue"],this.sWorkDir),this.Spinner.success(o,"\u{1F480} Merge Conflict Resolution"))}}async branchManage(){let t=await this.Prompt.call(J);Object.assign(this.gitInfo,t);let e=[];switch(this.gitInfo.branchCommand){case"change":{await this.Prompt.call([]);break}case"create":{await this.Prompt.call([]),e.push("switch","-c","<new-name>","<start-point>");break}case"rename":{await this.Prompt.call([]);let s=await this.getBranchList("current");e.push("branch","-m","<old-name>","<new-name>");break}case"delete":{await this.Prompt.call([]),e.push("branch","-D","");break}}await this.Launcher.run("git",e,this.sWorkDir)}async getBranchList(t){switch(t){case"current":{let s=(await this.Launcher.run("git",["branch"],this.sWorkDir)).split(`
`).find(i=>i.includes("*")).replace("*","").trim();if(s===void 0)throw new c("currentBranch");return s}case"all":return await this.Launcher.run("git",["branch","-a"],this.sWorkDir)}}};var z=y(require("prompts"));var L=class{prompt;constructor(){this.prompt=z.default}async call(t){let e=await this.prompt(t,{onCancel:()=>{console.error("User Cancel Exception")}});return g.validateRequireFields(e,t.map(s=>String(s.name))),e}};var Z=y(require("os"));var E=class r{static instance;ora=null;constructor(){import("ora").then(t=>{this.ora=t.default({spinner:"arc"})}).catch(t=>{throw new c(t.message)})}static getInstance(){return r.instance||(r.instance=new r),r.instance}get(){if(!this.ora)throw new c("Spinner instance is not initialized yet.");return this.ora}start(t){return this.get().start(t)}success(t,e){Z.default.type()==="Windows_NT"?t.stopAndPersist({symbol:"\x1B[32m\u221A\x1B[0m",text:e}):t.succeed(e)}};var D=class r{static instance;execa=null;constructor(){import("execa").then(t=>{this.execa=t})}static getInstance(){return r.instance||(r.instance=new r),r.instance}async run(t,e,s){if(!this.execa)throw new Error("Launcher instance is not initialized yet.");let{stdout:i}=await this.execa.execa(t,e,{cwd:s});return i}};var K="trace";var R={name:"fury-tool",version:"0.1.1",description:"Tool that helps developers in a variety of tasks",main:"dist/app.js",bin:{fury:"dist/app.js"},types:"types/app.d.ts",scripts:{exportType:"npx tsc",build:"rm -rf dist && rm -rf types && pnpm exportType && node ./scripts/build.mjs",dev:"node ./dist/app.js",test:"pnpm build && pnpm dev"},keywords:["cli","git","Node","JavaScript","tool"],repository:{type:"git",url:"git+https://github.com/jujoycode/fury-tool.git"},author:"_jujoycode",license:"MIT",bugs:{url:"https://github.com/jujoycode/fury-tool/issues"},homepage:"https://github.com/jujoycode/fury-tool?tab=readme",devDependencies:{"@types/node":"^20.12.7","@types/prompts":"^2.4.9","@types/update-notifier":"^6.0.8","ts-node":"^10.9.2",typescript:"^5.4.5"},dependencies:{commander:"^12.1.0",esbuild:"^0.22.0",execa:"^9.3.0",moment:"^2.30.1",ora:"^8.0.1",prompts:"^2.4.2","update-notifier":"^7.0.0"}};var V=class{program;prompt;spinner;launcher;logger;constructor(){this.program=new q.Command,this.prompt=new L,this.spinner=E.getInstance(),this.launcher=D.getInstance(),this.logger=m.getInstance(K),this.configureCommands()}configureCommands(){this.program.name(R.name).option("no option","Start create project").option("-g, --git","Start git management",!1).option("-m, --migration","Start migration data",!1).option("-s, --setting","Edit fury setting",!1).version(R.version).description(R.description).action(async t=>{let e=this.getCommand(t);e&&(console.time("\u{1F525}"),await e.invoke(),this.logger.space(),console.timeEnd("\u{1F525}"))})}getCommand(t){let e={prompt:this.prompt,logger:this.logger,spinner:this.spinner,launcher:this.launcher,utils:{CommonUtil:g,FileUtil:h}};switch(!0){case t.git:return new k(e);case t.migration:return;case t.setting:return;default:return new P(e)}}run(){this.logger.logo(),this.program.parse(process.argv)}};new V().run();
