#!/usr/bin/env node
"use strict";var O=Object.create;var P=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var S=(r,t,e,f)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of E(t))!L.call(r,s)&&s!==e&&P(r,s,{get:()=>t[s],enumerable:!(f=C(t,s))||f.enumerable});return r};var j=(r,t,e)=>(e=r!=null?O(R(r)):{},S(t||!r||!r.__esModule?P(e,"default",{value:r,enumerable:!0}):e,r));var v="fury",x="0.0.1",I="CLI tool for JavaScript developers";var k=require("commander");var d=j(require("prompts"));var a=class{constructor(){this.prompt=d.default}async call(t){return await this.prompt(t)}};var w=j(require("moment")),i=class r{constructor(){}static getInstance(){return r.instance||(r.instance=new r,this.instance.debug("New Instance - Logger")),this.instance.debug("Get Instance - Logger"),r.instance}formatMessage(t,e,f){let s="\x1B[0m",F=(0,w.default)().format("YYYY.MM.DD HH:mm:ss"),B=process.pid;return`${F} | ${t}${e}${s} | ${f}`}debug(t){console.log(this.formatMessage("\x1B[36m","DEBUG",t))}info(t){console.info(this.formatMessage("\x1B[32m","INFO",t))}warn(t){console.warn(this.formatMessage("\x1B[33m","WARN",t))}error(t){console.error(this.formatMessage("\x1B[31m","ERROR",t))}space(){console.log()}};var p=class{constructor({prompt:t,logger:e}){this.prompt=t,this.logger=e,this.sWorkDir=process.cwd()}setWorkDir(t){this.sWorkDir=t}};var o=class{constructor(t){this.logger=i.getInstance(),this.projectInfo=t}};var n=class extends o{constructor(t){super(t)}async build(){this.logger.info("Start Build with Plane")}getFactory(){var t;switch((t=this.projectInfo)==null?void 0:t.frameworkType){case"react":return new c(this.projectInfo);case"vue":return new m(this.projectInfo);case"express":return new g(this.projectInfo);default:return this}}};var c=class extends o{async build(){}};var m=class extends o{async build(){}};var g=class extends o{async build(){}};var b=[{type:"text",name:"projectName",message:"Enter the project name:",initial:"demo"},{type:"confirm",name:"useTypescript",message:"Use TypeScript?",initial:!0},{type:"confirm",name:"useFramework",message:"Use Framework?",initial:!0},{type:"confirm",name:"usePrettier",message:"Use Prettier?",initial:!0},{type:"confirm",name:"useEslint",message:"Use ESLint?",initial:!0}],h=[{type:"select",name:"framework",message:"Select a framework:",choices:[{title:"React",value:"react"},{title:"Vue",value:"vue"}]}];var l=class extends p{constructor(){super(...arguments);this.projectInfo={}}async prepare(){this.logger.space(),await this.prompt.call(b).then(e=>{Object.assign(this.projectInfo,e)}),this.projectInfo.useFramework&&await this.prompt.call(h).then(e=>{Object.assign(this.projectInfo,e)}),this.logger.space()}async execute(){await new n(this.projectInfo).getFactory().build()}async finalize(){}async rollback(){}};var y=class{constructor(){this.program=new k.Command,this.prompt=new a,this.logger=i.getInstance(),this.parsingCommand()}parsingCommand(){let t={prompt:this.prompt,logger:this.logger};this.program.name(v).option("no option","Start create project").option("-g, --git","Start git management",!1).version(x).description(I).action(e=>{switch(e){case e.git:break;default:{this.runCommand(new l(t));break}}})}async runCommand(t){try{await t.prepare(),await t.execute(),await t.finalize()}catch(e){this.logger.space(),this.logger.error(`${e.message}`),await t.rollback()}}run(){this.program.parse(process.argv)}};new y().run();
