#!/usr/bin/env node
"use strict";var k=Object.create;var j=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var L=(r,t,e,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of C(t))!S.call(r,s)&&s!==e&&j(r,s,{get:()=>t[s],enumerable:!(a=R(t,s))||a.enumerable});return r};var P=(r,t,e)=>(e=r!=null?k(E(r)):{},L(t||!r||!r.__esModule?j(e,"default",{value:r,enumerable:!0}):e,r));var F=require("commander");var n=class{constructor({prompt:t,logger:e}){this.prompt=t,this.logger=e,this.sWorkDir=process.cwd()}async invoke(){try{await this.prepare(),await this.execute(),await this.finalize()}catch(t){await this.rollback(t)}}setWorkDir(t){this.sWorkDir=t}};var v=P(require("moment")),i=class r{constructor(){}static getInstance(){return r.instance?this.instance.debug("Get Logger Instance"):(r.instance=new r,this.instance.debug("New Logger Instance")),r.instance}formatMessage(t,e,a){let s="\x1B[0m",O=(0,v.default)().format("YYYY.MM.DD HH:mm:ss"),D=process.pid;return`${O} | ${t}${e}${s} | ${a}`}debug(t){typeof t=="object"&&(t=JSON.stringify(t,null,2)),console.log(this.formatMessage("\x1B[36m","DEBUG",t))}info(t){console.info(this.formatMessage("\x1B[32m","INFO",t))}warn(t){console.warn(this.formatMessage("\x1B[33m","WARN",t))}error(t){console.error(this.formatMessage("\x1B[31m","ERROR",t))}space(){console.log()}};var o=class{constructor(t){this.logger=i.getInstance(),this.projectInfo=t}};var c=class extends o{constructor(t){super(t)}async build(){this.logger.info("Build Start (Default)")}getFactory(){var t;switch((t=this.projectInfo)==null?void 0:t.frameworkType){case"react":return new p(this.projectInfo);case"vue":return new m(this.projectInfo);case"express":return new g(this.projectInfo);default:return this}}};var p=class extends o{async build(){}};var m=class extends o{async build(){}};var g=class extends o{async build(){}};var u=[{type:"text",name:"projectName",message:"Enter the project name:",initial:"demo"},{type:"confirm",name:"useTypescript",message:"Use TypeScript?",initial:!0},{type:"confirm",name:"useFramework",message:"Use Framework?",initial:!0},{type:"confirm",name:"usePrettier",message:"Use Prettier?",initial:!0},{type:"confirm",name:"useEslint",message:"Use ESLint?",initial:!0}],b=[{type:"select",name:"frameworkType",message:"Select a framework:",choices:[{title:"\x1B[34mReact\x1B[0m",value:"react"},{title:"\x1B[32mVue\x1B[0m",value:"vue"}]}];var l=class extends n{constructor(){super(...arguments);this.projectInfo={}}async prepare(){this.logger.space();let e=await this.prompt.call(u);if(Object.assign(this.projectInfo,e),this.projectInfo.useFramework){let a=await this.prompt.call(b);Object.assign(this.projectInfo,a)}this.logger.space(),this.logger.debug(this.projectInfo),this.logger.space()}async execute(){await new c(this.projectInfo).getFactory().build()}async finalize(){}async rollback(e){this.logger.error(e)}};var d=P(require("prompts"));var f=class{constructor(){this.prompt=d.default}async call(t){return await this.prompt(t)}};var x="fury",I="0.0.1",w="CLI tool for JavaScript developers";var h=class{constructor(){this.program=new F.Command,this.prompt=new f,this.logger=i.getInstance(),this.configureCommands()}async configureCommands(){this.program.name(x).option("no option","Start create project").option("-g, --git","Start git management",!1).version(I).description(w).action(async t=>{let e=this.getCommand(t);e&&await e.invoke()})}getCommand(t){let e={prompt:this.prompt,logger:this.logger};switch(!0){case t.git:return;default:return new l(e)}}run(){this.logger.debug("Program Start"),this.program.parse(process.argv)}};new h().run();
