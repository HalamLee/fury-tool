#!/usr/bin/env node
"use strict";var w=Object.create;var f=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var O=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var E=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of x(e))!C.call(t,s)&&s!==r&&f(t,s,{get:()=>e[s],enumerable:!(o=I(e,s))||o.enumerable});return t};var u=(t,e,r)=>(r=t!=null?w(O(t)):{},E(e||!t||!t.__esModule?f(r,"default",{value:t,enumerable:!0}):r,t));var b="fury",h="0.0.1",v="CLI tool for JavaScript developers";var P=require("commander");var m=u(require("prompts"));var i=class{constructor(){this.prompt=m.default}async call(e){return await this.prompt(e)}};var y=u(require("moment")),a=class t{constructor(){}static getInstance(){return t.instance||(t.instance=new t,this.instance.debug("New Instance - Logger")),this.instance.debug("Get Instance - Logger"),t.instance}formatMessage(e,r,o){let s="\x1B[0m",j=(0,y.default)().format("YYYY.MM.DD HH:mm:ss"),R=process.pid;return`${j} | ${e}${r}${s} | ${o}`}debug(e){console.log(this.formatMessage("\x1B[36m","DEBUG",e))}info(e){console.info(this.formatMessage("\x1B[32m","INFO",e))}warn(e){console.warn(this.formatMessage("\x1B[33m","WARN",e))}error(e){console.error(this.formatMessage("\x1B[31m","ERROR",e))}space(){console.log()}};var p=class{constructor({prompt:e,logger:r}){this.prompt=e,this.logger=r}};var g=[{type:"text",name:"projectName",message:"Enter the project name:",initial:"demo"},{type:"confirm",name:"useTypescript",message:"Use TypeScript?",initial:!0},{type:"confirm",name:"useFramework",message:"Use Framework?",initial:!0},{type:"confirm",name:"usePrettier",message:"Use Prettier?",initial:!0},{type:"confirm",name:"useEslint",message:"Use ESLint?",initial:!0}],l=[{type:"select",name:"framework",message:"Select a framework:",choices:[{title:"React",value:"react"},{title:"Vue",value:"vue"}]}];var n=class extends p{constructor(){super(...arguments);this.projectInfo={}}async prepare(){this.logger.space();let r={};r.ddd.vsaue="",await this.prompt.call(g).then(o=>{Object.assign(this.projectInfo,o)}),this.projectInfo.useFramework&&await this.prompt.call(l).then(o=>{Object.assign(this.projectInfo,o)}),this.logger.space(),this.logger.debug(`projectInfo : ${JSON.stringify(this.projectInfo,null,2)}`)}async execute(){}async finalize(){}async rollback(){}};var d=class{constructor(){this.program=new P.Command,this.prompt=new i,this.logger=a.getInstance(),this.parsingCommand()}parsingCommand(){let e={prompt:this.prompt,logger:this.logger};this.program.name(b).option("no option","Start create project").option("-g, --git","Start git management",!1).version(h).description(v).action(r=>{switch(r){case r.git:break;default:{this.runCommand(new n(e));break}}})}async runCommand(e){try{await e.prepare(),await e.execute(),await e.finalize()}catch(r){this.logger.space(),this.logger.error(`${r.message}`),await e.rollback()}}run(){this.program.parse(process.argv)}};new d().run();
